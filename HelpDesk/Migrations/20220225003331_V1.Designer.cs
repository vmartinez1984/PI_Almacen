// <auto-generated />
using System;
using HelpDesk.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HelpDesk.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220225003331_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HelpDesk.Models.BranchEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TypeBranchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TypeBranchId");

                    b.ToTable("Branch");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchTypeId = 1,
                            CompanyId = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 481, DateTimeKind.Local).AddTicks(7191),
                            Email = "correo@dominio.com",
                            IsActive = true,
                            Name = "Sucursal",
                            Note = "Sin observaciones",
                            Phone = "55 5658 1111",
                            Street = "Domicilio conocido"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.BranchTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("BranchType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 478, DateTimeKind.Local).AddTicks(8407),
                            IsActive = true,
                            Name = "Matriz"
                        },
                        new
                        {
                            Id = 2,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 478, DateTimeKind.Local).AddTicks(8414),
                            IsActive = true,
                            Name = "Sucursal"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 478, DateTimeKind.Local).AddTicks(7823),
                            IsActive = true,
                            Name = "Software"
                        },
                        new
                        {
                            Id = 2,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 478, DateTimeKind.Local).AddTicks(7831),
                            IsActive = true,
                            Name = "Hardware"
                        },
                        new
                        {
                            Id = 3,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 478, DateTimeKind.Local).AddTicks(7836),
                            IsActive = true,
                            Name = "Comunicación"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.CompanyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 481, DateTimeKind.Local).AddTicks(5807),
                            IsActive = true,
                            Name = "Compañia A",
                            Note = "Prueba",
                            Street = "Domicilio conocido"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.KitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Kit");
                });

            modelBuilder.Entity("HelpDesk.Models.PersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchId = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 481, DateTimeKind.Local).AddTicks(9008),
                            Email = "ahal_tocob@hotmail.com",
                            IsActive = true,
                            LastName = "Mtz",
                            Name = "Víctor",
                            Phone = "55 3273 7357"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.ProductAssignmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAssignment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KitId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductAssignment");
                });

            modelBuilder.Entity("HelpDesk.Models.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStop")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("KitEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ProductStatusId")
                        .HasColumnType("int");

                    b.Property<string>("SerieNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("KitEntityId");

                    b.HasIndex("ProductStatusId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(2042),
                            DateStart = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(862),
                            DateStop = new DateTime(2023, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(1645),
                            Description = "Posicion 1/3",
                            IsActive = true,
                            Name = "Oficce 360",
                            ProductStatusId = 1,
                            SerieNumber = "148318"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3506),
                            DateStart = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3492),
                            DateStop = new DateTime(2023, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3496),
                            Description = "Posicion 2/3",
                            IsActive = true,
                            Name = "Oficce 360",
                            ProductStatusId = 1,
                            SerieNumber = "148318"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3519),
                            DateStart = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3513),
                            DateStop = new DateTime(2023, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3516),
                            Description = "Posicion 3/3",
                            IsActive = true,
                            Name = "Oficce 360",
                            ProductStatusId = 1,
                            SerieNumber = "148318"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3525),
                            Description = "Camara axis 1020",
                            IsActive = true,
                            Name = "Camara IP",
                            ProductStatusId = 1,
                            SerieNumber = "148318"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3530),
                            Description = "8GB Ram, ICore5, SSD 250GB",
                            IsActive = true,
                            Name = "PC 2000",
                            ProductStatusId = 1,
                            SerieNumber = "148318"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3536),
                            Description = "Logitech",
                            IsActive = true,
                            Name = "Maus y teclado",
                            ProductStatusId = 1,
                            SerieNumber = "148318"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 482, DateTimeKind.Local).AddTicks(3541),
                            Description = "LG",
                            IsActive = true,
                            Name = "Monitor 21",
                            ProductStatusId = 1,
                            SerieNumber = "148318"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.ProductStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ProductStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 477, DateTimeKind.Local).AddTicks(6121),
                            IsActive = true,
                            Name = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 477, DateTimeKind.Local).AddTicks(6511),
                            IsActive = true,
                            Name = "Asignado"
                        },
                        new
                        {
                            Id = 3,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 477, DateTimeKind.Local).AddTicks(6518),
                            IsActive = true,
                            Name = "Merma"
                        },
                        new
                        {
                            Id = 4,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 477, DateTimeKind.Local).AddTicks(6523),
                            IsActive = true,
                            Name = "Baja por daño"
                        },
                        new
                        {
                            Id = 5,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 477, DateTimeKind.Local).AddTicks(6529),
                            IsActive = true,
                            Name = "Recuperado"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 478, DateTimeKind.Local).AddTicks(9326),
                            IsActive = true,
                            Name = "Operador"
                        },
                        new
                        {
                            Id = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 478, DateTimeKind.Local).AddTicks(9343),
                            IsActive = true,
                            Name = "Administrador"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateRegistration = new DateTime(2022, 2, 24, 18, 33, 30, 481, DateTimeKind.Local).AddTicks(4518),
                            IsActive = true,
                            LastName = "",
                            Name = "Administrador",
                            Password = "123456",
                            RolId = 1,
                            UserName = "administrador"
                        });
                });

            modelBuilder.Entity("HelpDesk.Models.BranchEntity", b =>
                {
                    b.HasOne("HelpDesk.Models.CompanyEntity", "Company")
                        .WithMany("ListBranches")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Models.BranchTypeEntity", "TypeBranch")
                        .WithMany()
                        .HasForeignKey("TypeBranchId");

                    b.Navigation("Company");

                    b.Navigation("TypeBranch");
                });

            modelBuilder.Entity("HelpDesk.Models.PersonEntity", b =>
                {
                    b.HasOne("HelpDesk.Models.BranchEntity", "Branch")
                        .WithMany("ListPerson")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("HelpDesk.Models.ProductAssignmentEntity", b =>
                {
                    b.HasOne("HelpDesk.Models.KitEntity", "Kit")
                        .WithMany()
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Models.PersonEntity", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Models.ProductEntity", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kit");

                    b.Navigation("Person");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HelpDesk.Models.ProductEntity", b =>
                {
                    b.HasOne("HelpDesk.Models.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Models.KitEntity", null)
                        .WithMany("ListProducts")
                        .HasForeignKey("KitEntityId");

                    b.HasOne("HelpDesk.Models.ProductStatusEntity", "ProductStatus")
                        .WithMany()
                        .HasForeignKey("ProductStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductStatus");
                });

            modelBuilder.Entity("HelpDesk.Models.RoleEntity", b =>
                {
                    b.HasOne("HelpDesk.Models.UserEntity", null)
                        .WithMany("Role")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("HelpDesk.Models.BranchEntity", b =>
                {
                    b.Navigation("ListPerson");
                });

            modelBuilder.Entity("HelpDesk.Models.CompanyEntity", b =>
                {
                    b.Navigation("ListBranches");
                });

            modelBuilder.Entity("HelpDesk.Models.KitEntity", b =>
                {
                    b.Navigation("ListProducts");
                });

            modelBuilder.Entity("HelpDesk.Models.UserEntity", b =>
                {
                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
